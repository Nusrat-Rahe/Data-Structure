
#include <iostream>
using namespace std;

void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        bool isSwap = false;
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) { // Change < for descending
                swap(arr[j], arr[j + 1]);
                isSwap = true;
            }
        }
        if (!isSwap) {
            return; // Already sorted
        }
    }
}

void insertionSort(int arr[], int n) {
    for (int i = 1; i < n; i++) {
        int curr = arr[i];
        int prev = i - 1;
        while (prev >= 0 && arr[prev] > curr) { // Change < for descending
            arr[prev + 1] = arr[prev];
            prev--;
        }
        arr[prev + 1] = curr;
    }
}

void selectionSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        int smallestIdx = i;
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[smallestIdx]) { // Change > for descending
                smallestIdx = j;
            }
        }
        swap(arr[i], arr[smallestIdx]);
    }
}

void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    int n = 5;
    int arr1[] = {1, 4, 5, 2, 3};
    int arr2[] = {1, 4, 5, 2, 3};
    int arr3[] = {1, 4, 5, 2, 3};

    cout << "Original:       ";
    printArray(arr1, n);

    bubbleSort(arr1, n);
    cout << "Bubble Sorted:  ";
    printArray(arr1, n);

    insertionSort(arr2, n);
    cout << "Insertion Sorted:";
    printArray(arr2, n);

    selectionSort(arr3, n);
    cout << "Selection Sorted:";
    printArray(arr3, n);

    return 0;
}
