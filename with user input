#include <iostream>
using namespace std;

void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        bool isSwap = false;
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(arr[j], arr[j + 1]);
                isSwap = true;
            }
        }
        if (!isSwap)
            return;
    }
}

void insertionSort(int arr[], int n) {
    for (int i = 1; i < n; i++) {
        int curr = arr[i];
        int prev = i - 1;
        while (prev >= 0 && arr[prev] > curr) {
            arr[prev + 1] = arr[prev];
            prev--;
        }
        arr[prev + 1] = curr;
    }
}

void selectionSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        int smallestIdx = i;
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[smallestIdx]) {
                smallestIdx = j;
            }
        }
        swap(arr[i], arr[smallestIdx]);
    }
}

void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    int n;

    // Get array size from user
    cout << "Enter number of elements: ";
    cin >> n;

    int original[n];

    // Get array elements from user
    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> original[i];
    }

    // Make copies for each sort
    int arr1[n], arr2[n], arr3[n];
    for (int i = 0; i < n; i++) {
        arr1[i] = arr2[i] = arr3[i] = original[i];
    }

    // Sorting and printing
    bubbleSort(arr1, n);
    cout << "After Bubble Sort:    ";
    printArray(arr1, n);

    insertionSort(arr2, n);
    cout << "After Insertion Sort: ";
    printArray(arr2, n);

    selectionSort(arr3, n);
    cout << "After Selection Sort: ";
    printArray(arr3, n);

    return 0;
}
